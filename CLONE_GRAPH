 unordered_map<Node*,Node*> mp;
    Node* cloneGraph(Node* node) {
      if(node==NULL)
      {
          return NULL;
      }
      if(mp.find(node)==mp.end())
      {
         Node* t = new Node(node->val);
          mp[node]= t;
          for(auto x: node->neighbors)
          {
              mp[node]->neighbors.push_back(cloneGraph(x));                   //dfs  TC O(V+E)
          }
      }
        return mp[node];
//         if(node==NULL) return NULL;
//        Node* first = new Node(node->val);
//         mp[node]=first;
//         queue<Node*> q;
//         q.push(node);
//         while(q.empty()==false)
//         {
//             Node* t = q.front();
//             q.pop();
//             for(auto x: t->neighbors)
//             {
//                 if(mp.find(x)==mp.end())
//                 {
//                     Node* newNode= new Node(x->val);                   // bfs
//                     mp[x]= newNode;
//                     q.push(x);
//                 }
//                  mp[t]->neighbors.push_back(mp[x]);
//             }
           
//         }
//         return mp[node];
        
     
        
    }
