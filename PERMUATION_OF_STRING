void find(string s, int l, int r, unordered_set<string> &st)
	{
	    if(l==r)
	    {                     // repeation no allowed so used unoredred_set;
	        st.insert(s);
	    }
	    else{
	    for(int i=l;i<=r; i++)
	    {
	        swap(s[l],s[i]);
	        find(s,l+1,r,st);              // TC (N*N!) SC O(L-R)
	        swap(s[l],s[i]);
	    }
	    }
	}
		vector<string>find_permutation(string S)
		{
		   
		   vector<string> result;
		   unordered_set<string> st;
		   if(S.size()==0 )
		   {
		       return result;
		   }
		   int n = S.size()-1;
		   find(S,0,n,st);
		   for(auto x: st)
		   {
		       result.push_back(x);
		   }
		   sort(result.begin(),result.end());
		   return result;
		}
