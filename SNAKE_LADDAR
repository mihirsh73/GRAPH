int minThrow(int N, int arr[]){
        int moves[31];
        bool vis[31];
        memset(moves, -1, sizeof(moves));
        memset(vis, false, sizeof(vis));
        for(int i = 0;i < 2*N;i += 2)
            moves[arr[i]] = arr[i+1];
        
        queue<pair<int, int>> q;
        pair<int, int> p;
        q.push({1, 0});
        vis[1] = true;
        int ans=0;
        while(!q.empty()){
    		p = q.front();
    		int ii = q.front().first;
    		int ss = q.front().second;
    		ans =ss;
    		if(ii == 30)
    		break;
    		q.pop();                                           TC O(N) TOTAL NUMBER OF CELLS
    		for(int i = ii+1;i <= ii+6 && i <= 30;i++){
    			if(!vis[i]){
    				//pp.second = ss+1;
    				vis[i] = true;
    				if(moves[i] != -1)
    					//pp.first = moves[i];
    					q.push({moves[i],ss+1});
    				else
    				    //pp.first = i;
    				    q.push({i,ss+1});
    				//q.push(pp);
    			}
    		}
    	}
    	return ans;
